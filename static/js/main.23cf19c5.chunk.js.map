{"version":3,"sources":["App.js","index.js"],"names":["App","questions","questionText","answerOptions","answerText","isCorrect","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","className","length","map","onClick","nextQuetions","handleAnswerButtonClick","rootElement","document","getElementById","ReactDOM","render"],"mappings":"sJA6GeA,MAzGf,WACE,IAAMC,EAAY,CAChB,CACEC,aAAc,sCACdC,cAAe,CACb,CAAEC,WAAY,gBAAiBC,WAAW,GAC1C,CAAED,WAAY,eAAgBC,WAAW,GACzC,CAAED,WAAY,YAAaC,WAAW,GACtC,CAAED,WAAY,cAAeC,WAAW,KAG5C,CACEH,aAAc,uCACdC,cAAe,CACb,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,cAAeC,WAAW,KAG5C,CACEH,aAAc,sCACdC,cAAe,CACb,CAAEC,WAAY,cAAeC,WAAW,GAExC,CAAED,WAAY,SAAUC,WAAW,GACnC,CAAED,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,OAAQC,WAAW,KAGrC,CACEH,aAAc,wCACdC,cAAe,CACb,CAAEC,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,WAAYC,WAAW,GACrC,CAAED,WAAY,OAAQC,WAAW,KAGrC,CACEH,aAAc,wCACdC,cAAe,CACb,CAAEC,WAAY,UAAWC,WAAW,GACpC,CAAED,WAAY,QAASC,WAAW,GAClC,CAAED,WAAY,OAAQC,WAAW,GACjC,CAAED,WAAY,YAAaC,WAAW,MAK5C,EAA8CC,mBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAcA,OACE,qCACE,oBAAIC,UAAU,SAAd,kBACA,qBAAKA,UAAU,MAAf,SACGJ,EACC,sBAAKI,UAAU,gBAAf,wBACcF,EADd,WAC6BV,EAAUa,UAGvC,qCACE,sBAAKD,UAAU,mBAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,+CACcN,EAAkB,EADhC,IACoCN,EAAUa,YAGhD,qBAAKD,UAAU,gBAAf,SACGZ,EAAUM,GAAiBL,kBAIhC,qBAAKW,UAAU,iBAAf,SACGZ,EAAUM,GAAiBJ,cAAcY,KAAI,SAACZ,GAAD,OAC5C,wBACEa,QAAS,kBArCO,SAACX,IACb,IAAdA,GACFO,EAASD,EAAQ,GAGnB,IAAMM,EAAeV,EAAkB,EACnCU,EAAehB,EAAUa,OAC3BN,EAAmBS,GAEnBP,GAAa,GA6BCQ,CAAwBf,EAAcE,YAF1C,SAKGF,EAAcC,2BC7F3Be,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,I","file":"static/js/main.23cf19c5.chunk.js","sourcesContent":["import \"./styles.css\";\n\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const questions = [\n    {\n      questionText: \"What is the National Tree of India?\",\n      answerOptions: [\n        { answerText: \"Tamarind Tree\", isCorrect: false },\n        { answerText: \"Baniyan Tree\", isCorrect: true },\n        { answerText: \"Neem Tree\", isCorrect: false },\n        { answerText: \"Peepal Tree\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"What is the National Fruit of India?\",\n      answerOptions: [\n        { answerText: \"Mango\", isCorrect: true },\n        { answerText: \"Banana\", isCorrect: false },\n        { answerText: \"Apple\", isCorrect: false },\n        { answerText: \"Pomegranate\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"What is the National Bird of India?\",\n      answerOptions: [\n        { answerText: \"King Fisher\", isCorrect: false },\n\n        { answerText: \"Parrot\", isCorrect: false },\n        { answerText: \"Peacock\", isCorrect: true },\n        { answerText: \"Crow\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"What is the National Animal of India?\",\n      answerOptions: [\n        { answerText: \"Tiger\", isCorrect: true },\n        { answerText: \"Lion\", isCorrect: false },\n        { answerText: \"Elephant\", isCorrect: false },\n        { answerText: \"Deer\", isCorrect: false }\n      ]\n    },\n    {\n      questionText: \"What is the National Flower of India?\",\n      answerOptions: [\n        { answerText: \"Jasmine\", isCorrect: false },\n        { answerText: \"Lotus\", isCorrect: true },\n        { answerText: \"Lily\", isCorrect: false },\n        { answerText: \"Sunflower\", isCorrect: false }\n      ]\n    }\n  ];\n\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const handleAnswerButtonClick = (isCorrect) => {\n    if (isCorrect === true) {\n      setScore(score + 1);\n    }\n\n    const nextQuetions = currentQuestion + 1;\n    if (nextQuetions < questions.length) {\n      setCurrentQuestion(nextQuetions);\n    } else {\n      setShowScore(true);\n    }\n  };\n\n  return (\n    <>\n      <h1 className=\"header\">Quiz</h1>\n      <div className=\"app\">\n        {showScore ? (\n          <div className=\"score-section\">\n            You scored {score} out of {questions.length}\n          </div>\n        ) : (\n          <>\n            <div className=\"question-section\">\n              <div className=\"question-count\">\n                <span>\n                  Question # {currentQuestion + 1}/{questions.length}\n                </span>\n              </div>\n              <div className=\"question-text\">\n                {questions[currentQuestion].questionText}\n              </div>\n            </div>\n\n            <div className=\"answer-section\">\n              {questions[currentQuestion].answerOptions.map((answerOptions) => (\n                <button\n                  onClick={() =>\n                    handleAnswerButtonClick(answerOptions.isCorrect)\n                  }\n                >\n                  {answerOptions.answerText}\n                </button>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}